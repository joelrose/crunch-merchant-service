// Code generated by MockGen. DO NOT EDIT.
// Source: services/deliverect/interface.go

// Package mock_deliverect is a generated GoMock package.
package mock_deliverect

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	deliverect "github.com/joelrose/crunch-merchant-service/services/deliverect"
)

// MockDeliverectInterface is a mock of DeliverectInterface interface.
type MockDeliverectInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDeliverectInterfaceMockRecorder
}

// MockDeliverectInterfaceMockRecorder is the mock recorder for MockDeliverectInterface.
type MockDeliverectInterfaceMockRecorder struct {
	mock *MockDeliverectInterface
}

// NewMockDeliverectInterface creates a new mock instance.
func NewMockDeliverectInterface(ctrl *gomock.Controller) *MockDeliverectInterface {
	mock := &MockDeliverectInterface{ctrl: ctrl}
	mock.recorder = &MockDeliverectInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeliverectInterface) EXPECT() *MockDeliverectInterfaceMockRecorder {
	return m.recorder
}

// CreateOrder mocks base method.
func (m *MockDeliverectInterface) CreateOrder(order deliverect.CreateOrderRequest, channelLinkId string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrder", order, channelLinkId)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOrder indicates an expected call of CreateOrder.
func (mr *MockDeliverectInterfaceMockRecorder) CreateOrder(order, channelLinkId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrder", reflect.TypeOf((*MockDeliverectInterface)(nil).CreateOrder), order, channelLinkId)
}
